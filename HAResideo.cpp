/*

*/

#include "HAResideo.h"
#include <String.h>
#include <DatedVersion.h>
DATED_VERSION(0, 1)
#define DEVICE_NAME  "Resideo"
#define DEVICE_MODEL "Resideo Mod esp8266"

////////////////////////////////////////////////////////////////////////////////////////////
#define LOG_REMOTE
#define LOG_LEVEL 2
#include <Logging.h>

////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////
#define CONSTRUCT_P0(var)       var(#var, HABaseDeviceType::PrecisionP0)
#define CONSTRUCT_P1(var)       var(#var, HABaseDeviceType::PrecisionP1)

#define CONFIGURE_BASE(var, name, class, icon)  var.setName(name); var.setDeviceClass(class); var.setIcon("mdi:" icon)
#define CONFIGURE(var, name, class, icon, unit) CONFIGURE_BASE(var, name, class, icon); var.setUnitOfMeasurement(unit)
#define CONFIGURE_TEMP(var, name, icon)         CONFIGURE(var, name, "temperature", icon, "°C")

////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////
HAResideo::HAResideo()
: CONSTRUCT_P0(co2_level), CONSTRUCT_P1(humidity), CONSTRUCT_P1(temperature)
{
  CONFIGURE(co2_level,  "CO2",        "carbon_dioxide", "molecule-co2",   "ppm");
  CONFIGURE(humidity,   "Humidity",   "humidity",       "water-percent",  "%");
  CONFIGURE(temperature,"Temperature","temperature",    "thermometer",    "°C");
}

////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////
bool HAResideo::begin(const byte mac[6], HAMqtt *mqtt) 
{
  setUniqueId(mac, 6);
  setManufacturer("InnoVeer");
  setName(DEVICE_NAME);
  setSoftwareVersion(VERSION);
  setModel(DEVICE_MODEL);

  mqtt->addDeviceType(&humidity);  
  mqtt->addDeviceType(&temperature);  
  mqtt->addDeviceType(&co2_level);  

  return true;
}

////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////
bool HAResideo::loop()
{
  return false;
}

////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////

